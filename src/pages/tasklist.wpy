
<template>
 <view class="content">
     <van-cell-group>
            <van-cell wx-if="{{nowtimelist.length>0}}" wx:for="{{nowtimelist}}" id="{{item.id}}" wx:key="index" title="{{item.name}}" is-link bind:click="viewricheng"/>
      </van-cell-group>
        <van-popup
   show="{{ show }}"
  closeable
  close-icon="close"
  position="bottom"
  custom-style="height: 100%"
  bind:close="onClose"
  z-index="500"
>
<view class="popcentext">
  <van-nav-bar
  title="日程信息"
  left-text="返回"
  left-arrow
  bind:click-left="onClickLeft"
/>
<viewcalendar wx:if="{{isview}}"></viewcalendar><view wx:else></view>
</view>
</van-popup>
     </view>
</template>

<script>
import wepy from "wepy";
import { connect } from "wepy-redux";
import { stringify } from "qs";
import viewcalendar from "@/components/viewcalendar";

@connect({})
export default class tasklist extends wepy.page {
  config = {
     navigationBarTitleText: '日程管理系统',
    usingComponents: {
      "van-icon": "../../static/plugIn/icon/index",
      "van-popup": "../../static/plugIn/popup/index",
      "van-cell": "../../static/plugIn/cell/index",
      "van-cell-group": "../../static/plugIn/cell-group/index",
      "van-nav-bar": "../../static/plugIn/nav-bar/index",
      "van-field": "../../static/plugIn/field/index"
    }
  };
  data = {
    list: [],
    nowtimelist: [],
    isview: false,
    show: false,
    userlist: []
  };
  components = {
    viewcalendar
  };
  onLoad() {
    // this.getlist();
    // this.getuserlis();
  }
  onShow(){
      this.getlist();
    this.getuserlis();
  }
  getlist() {
    let token = wx.getStorageSync("token");
    let user = wx.getStorageSync("user");

    const param = {
      Function: {
        Name: "bykeyword",
        Args: ["", "Site", "Venue", "Customer"]
      }
    };

    wx.request({
      url: `http://211.149.163.211:4000/ERP/BPM/task/Read/Rows?${stringify(param, {
        allowDots: true,
        encodeValuesOnly: true
      })}`,
      method: "POST",
      header: {
        "content-type": "application/x-www-form-urlencoded",
        Authorization: `Bearer ${token}`
      },
      success: res => {
        if (res && res.data) {
          this.setData({
            nowtimelist: res.data
          });
          this.nowtimelist = res.data;
        }
      },
      fail: err => {
        console.log(err);
      }
    });
  }
  getuserlis() {
    let token = wx.getStorageSync("token");
    wx.request({
      url: `http://211.149.163.211:4000/ERP/AVM/User/Read/Rows`,
      method: "POST",
      header: {
        "content-type": "application/x-www-form-urlencoded",
        Authorization: `Bearer ${token}`
      },
      success: res => {
        if (res && res.data) {
          this.userlist = res.data;
        }
      },
      fail: err => {
        console.log(err);
      }
    });
  }
  methods = {
    onClickLeft() {
      this.show = false;
      this.isview = false;
    },
    viewricheng(e) {
      this.isview = true;
      this.show = true;
      let taskinfo = this.nowtimelist.filter(p => p.id == e.target.id)[0];
      taskinfo.duijieren = this.userlist.filter(p=>p.id==taskinfo.receptionId)[0].realName
  
      this.$broadcast(
        "getcalendarinfo",
       taskinfo
      );
    },
    onClose() {
      this.show = false;
      this.isview = false;
    }
  };
}
</script>
